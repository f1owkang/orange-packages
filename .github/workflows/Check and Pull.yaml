name: Check and Pull Multiple Repositories Updates

# 配置触发器：每天凌晨0点运行一次，并允许手动触发
on:
  schedule:
    - cron: '0 0 * * *' # 每天凌晨0点运行一次
  workflow_dispatch: # 允许手动触发

jobs:
  check-updates:
    runs-on: ubuntu-latest

    steps:
    # 第一步：签出当前仓库的代码
    - name: Checkout this repository
      uses: actions/checkout@v2

    # 第二步：设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # 第三步：安装 PyYAML 库，用于解析 YAML 文件
    - name: Install PyYAML
      run: python -m pip install pyyaml

    # 第四步：执行 Python 脚本，读取 YAML 文件中的仓库信息
    - name: Read repositories from YAML
      id: read_yaml
      run: python update.py

    # 第五步：检查每个仓库是否有更新，并拉取更新的文件
    - name: Check and Pull Updates
      run: |
        for repo_url in $(echo ${!steps.read_yaml.outputs.*_url}); do
          repo_name=$(echo $repo_url | sed 's/.*\.\.\.//;s/_url//')
          repo_path=$(eval echo \${steps.read_yaml.outputs.${repo_name}_path})

          # 克隆目标仓库到临时目录
          git clone --depth=1 ${repo_url} temp-repo
          
          # 比较临时目录与目标路径下的文件差异
          diff_output=$(diff -qr temp-repo $repo_path || true)
          if [[ -n "$diff_output" ]]; then
            echo "Updating $repo_url at $repo_path"
            # 如果有差异，复制更新的文件到目标路径
            cp -r temp-repo/* $repo_path/
            # 配置 git 用户信息
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            # 添加并提交更新
            git add $repo_path/
            git commit -m "Update files from $repo_url"
            git push
          fi
          # 删除临时目录
          rm -rf temp-repo
        done
